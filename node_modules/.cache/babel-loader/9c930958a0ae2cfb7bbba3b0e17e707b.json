{"ast":null,"code":"import { uiActions } from \"./ui-slice\";\nimport { cartActions } from \"./cart-slice\";\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch(\"https://redux-cart-b8fa5-default-rtdb.firebaseio.com/cart.json\");\n\n      if (!response.ok) {\n        throw new Error(\"Could not fetch the data\");\n      }\n\n      const data = await response.json();\n      return data;\n    };\n\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart(cartData));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"fetching cart data failed!\"\n      }));\n    }\n  };\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: \"pending\",\n      title: \"sending...\",\n      message: \"sending cart data!\"\n    }));\n\n    const sendRequest = async () => {\n      const response = await fetch(\"https://redux-cart-b8fa5-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify({\n          items: cart.items,\n          totalQuantity: cart.totalQuantity\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(\"sending cart data failed\");\n      }\n    };\n\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: \"success\",\n        title: \"Success!\",\n        message: \"sent cart data successfully!\"\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"sending cart data failed!\"\n      }));\n    }\n  };\n};","map":{"version":3,"names":["uiActions","cartActions","fetchCartData","dispatch","fetchData","response","fetch","ok","Error","data","json","cartData","replaceCart","error","showNotification","status","title","message","sendCartData","cart","sendRequest","method","body","JSON","stringify","items","totalQuantity"],"sources":["/Users/rosuljonikromjanov/Desktop/web_dev/REACT Projects/ReduxCart/src/store/cart-action.js"],"sourcesContent":["import { uiActions } from \"./ui-slice\";\nimport { cartActions } from \"./cart-slice\";\nexport const fetchCartData = () => {\n  return async(dispatch) => {\n    const fetchData = async () => {\n      const response = await fetch(\n        \"https://redux-cart-b8fa5-default-rtdb.firebaseio.com/cart.json\"\n      );\n      if (!response.ok) {\n        throw new Error(\"Could not fetch the data\");\n      }\n      const data = await response.json();\n      return data;\n    };\n    try{\n       const cartData =  await fetchData()\n       dispatch (cartActions.replaceCart(cartData))\n    }catch(error){\n        dispatch(\n            uiActions.showNotification({\n              status: \"error\",\n              title: \"Error!\",\n              message: \"fetching cart data failed!\",\n            })\n          );\n    }\n  };\n};\nexport const sendCartData = (cart) => {\n  return async (dispatch) => {\n    dispatch(\n      uiActions.showNotification({\n        status: \"pending\",\n        title: \"sending...\",\n        message: \"sending cart data!\",\n      })\n    );\n    const sendRequest = async () => {\n      const response = await fetch(\n        \"https://redux-cart-b8fa5-default-rtdb.firebaseio.com/cart.json\",\n        {\n          method: \"PUT\",\n          body: JSON.stringify({items : cart.items, totalQuantity: cart.totalQuantity }),\n        }\n      );\n      if (!response.ok) {\n        throw new Error(\"sending cart data failed\");\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(\n        uiActions.showNotification({\n          status: \"success\",\n          title: \"Success!\",\n          message: \"sent cart data successfully!\",\n        })\n      );\n    } catch (error) {\n      dispatch(\n        uiActions.showNotification({\n          status: \"error\",\n          title: \"Error!\",\n          message: \"sending cart data failed!\",\n        })\n      );\n    }\n  };\n};\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,YAA1B;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,OAAO,MAAMC,aAAa,GAAG,MAAM;EACjC,OAAO,MAAMC,QAAN,IAAmB;IACxB,MAAMC,SAAS,GAAG,YAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gEAD0B,CAA5B;;MAGA,IAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;QAChB,MAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;MACD;;MACD,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;MACA,OAAOD,IAAP;IACD,CATD;;IAUA,IAAG;MACA,MAAME,QAAQ,GAAI,MAAMP,SAAS,EAAjC;MACAD,QAAQ,CAAEF,WAAW,CAACW,WAAZ,CAAwBD,QAAxB,CAAF,CAAR;IACF,CAHD,CAGC,OAAME,KAAN,EAAY;MACTV,QAAQ,CACJH,SAAS,CAACc,gBAAV,CAA2B;QACzBC,MAAM,EAAE,OADiB;QAEzBC,KAAK,EAAE,QAFkB;QAGzBC,OAAO,EAAE;MAHgB,CAA3B,CADI,CAAR;IAOH;EACF,CAvBD;AAwBD,CAzBM;AA0BP,OAAO,MAAMC,YAAY,GAAIC,IAAD,IAAU;EACpC,OAAO,MAAOhB,QAAP,IAAoB;IACzBA,QAAQ,CACNH,SAAS,CAACc,gBAAV,CAA2B;MACzBC,MAAM,EAAE,SADiB;MAEzBC,KAAK,EAAE,YAFkB;MAGzBC,OAAO,EAAE;IAHgB,CAA3B,CADM,CAAR;;IAOA,MAAMG,WAAW,GAAG,YAAY;MAC9B,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gEAD0B,EAE1B;QACEe,MAAM,EAAE,KADV;QAEEC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;UAACC,KAAK,EAAGN,IAAI,CAACM,KAAd;UAAqBC,aAAa,EAAEP,IAAI,CAACO;QAAzC,CAAf;MAFR,CAF0B,CAA5B;;MAOA,IAAI,CAACrB,QAAQ,CAACE,EAAd,EAAkB;QAChB,MAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;MACD;IACF,CAXD;;IAYA,IAAI;MACF,MAAMY,WAAW,EAAjB;MACAjB,QAAQ,CACNH,SAAS,CAACc,gBAAV,CAA2B;QACzBC,MAAM,EAAE,SADiB;QAEzBC,KAAK,EAAE,UAFkB;QAGzBC,OAAO,EAAE;MAHgB,CAA3B,CADM,CAAR;IAOD,CATD,CASE,OAAOJ,KAAP,EAAc;MACdV,QAAQ,CACNH,SAAS,CAACc,gBAAV,CAA2B;QACzBC,MAAM,EAAE,OADiB;QAEzBC,KAAK,EAAE,QAFkB;QAGzBC,OAAO,EAAE;MAHgB,CAA3B,CADM,CAAR;IAOD;EACF,CAtCD;AAuCD,CAxCM"},"metadata":{},"sourceType":"module"}